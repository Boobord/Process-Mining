import warnings
warnings.filterwarnings("ignore")

import pm4py
log = pm4py.read_xes('running-example.xes')

process_tree = pm4py.discover_tree_inductive(log)
bpmn_model = pm4py.convert_to_bpmn(process_tree)
pm4py.view_bpmn(bpmn_model)

import pm4py
log = pm4py.read_xes('running-example.xes')
process_tree = pm4py.discover_tree_inductive(log)
pm4py.view_process_tree(process_tree)

#Obtaining a Process Map
import pm4py
log = pm4py.read_xes('D:/power points/process mining/codeData process mining/running-example.xes')

dfg, start_activities, end_activities = pm4py.discover_dfg(log)
pm4py.view_dfg(dfg, start_activities, end_activities)

import pm4py
log = pm4py.read_xes('D:/power points/process mining/codeData process mining/running-example.xes')

map = pm4py.discover_heuristics_net(log)
pm4py.view_heuristics_net(map)
                                    
#Process Discovery
import os
from pm4py.objects.log.importer.xes import importer as xes_importer
log = xes_importer.apply(os.path.join('running-example.xes'))

from pm4py.algo.discovery.alpha import algorithm as alpha_miner
net, initial_marking, final_marking = alpha_miner.apply(log)

#Alpha Miner
import os
from pm4py.objects.log.importer.xes import importer as xes_importer
from pm4py.algo.discovery.inductive import algorithm as inductive_miner

log = xes_importer.apply(os.path.join('running-example.xes'))
net, initial_marking, final_marking = inductive_miner.apply(log)

from pm4py.algo.discovery.inductive import algorithm as inductive_miner
from pm4py.visualization.process_tree import visualizer as pt_visualizer

tree = inductive_miner.apply_tree(log)

gviz = pt_visualizer.apply(tree)
pt_visualizer.view(gviz)

from pm4py.objects.conversion.process_tree import converter as pt_converter
net, initial_marking, final_marking = pt_converter.apply(tree, variant=pt_converter.Variants.TO_PETRI_NET)

#Inductive Miner
import os
from pm4py.objects.log.importer.xes import importer as xes_importer
from pm4py.algo.discovery.inductive import algorithm as inductive_miner


from pm4py.objects.log.importer.xes import importer as xes_importer
log = xes_importer.apply(os.path.join("running-example.xes"))

from pm4py.algo.discovery.dfg import algorithm as dfg_discovery
dfg = dfg_discovery.apply(log)

from pm4py.visualization.dfg import visualizer as dfg_visualization
gviz = dfg_visualization.apply(dfg, log=log, variant=dfg_visualization.Variants.FREQUENCY)
dfg_visualization.view(gviz)
net, initial_marking, final_marking = inductive_miner.apply(log)
                                    
